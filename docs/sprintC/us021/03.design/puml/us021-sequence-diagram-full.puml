@startuml
skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

actor "GSM" as GSM
participant ":AddEntryToToDoListUI" as UI
participant ":GreenSpaceController" as GreenSpaceController
participant ":ToDoListController" as ToDoListController
participant ":Repositories" as Repositories
participant "repositories:\nRepositories" as RepositoriesInstance
participant "greenSpaceRepository:\nGreenSpaceRepository" as GreenSpaceRepository
participant "toDoListRepository:\nToDoListRepository" as ToDoListRepository
participant "degreeOfUrgency:\nDegreeOfUrgency" as DegreeOfUrgencyRepository

activate GSM

    GSM -> UI : request to add a new entry to the To-Do List
    activate UI

        UI -> GreenSpaceController : getGreenSpaces()
        activate GreenSpaceController

            GreenSpaceController -> Repositories : getInstance()
            activate Repositories

                Repositories --> GreenSpaceController : instance
            deactivate Repositories

            GreenSpaceController -> RepositoriesInstance : getGreenSpaceRepository()
            activate RepositoriesInstance

                RepositoriesInstance --> GreenSpaceController : greenSpaceRepository
            deactivate RepositoriesInstance

            GreenSpaceController -> GreenSpaceRepository : getGreenSpaces()
            activate GreenSpaceRepository

                GreenSpaceRepository --> GreenSpaceController : greenSpaces
            deactivate GreenSpaceRepository

            GreenSpaceController --> UI : greenSpaces
        deactivate GreenSpaceController

        UI --> GSM : present list of green spaces for selection
    deactivate UI

    GSM -> UI : select a green space for the new entry
    activate UI
        UI --> GSM : request for details of the new entry (a state, a green space,\n a description, a degree of urgency, a duration)
    deactivate UI
    GSM -> UI : provide details of the new entry
    activate UI

        UI -> GreenSpaceController : getDegreesOfUrgency()
        activate GreenSpaceController

            GreenSpaceController -> DegreeOfUrgencyRepository : getDegreesOfUrgency()
            activate DegreeOfUrgencyRepository

                DegreeOfUrgencyRepository -> DegreeOfUrgencyRepository : values()


                DegreeOfUrgencyRepository --> GreenSpaceController : degreesOfUrgency
            deactivate DegreeOfUrgencyRepository

            GreenSpaceController --> UI : degreesOfUrgency
        deactivate GreenSpaceController

        UI --> GSM : displays degrees of urgency
    deactivate UI

    GSM -> UI : selects degree of urgency, provides duration and status
    activate UI

        UI -> ToDoListController** : create
        UI -> ToDoListController : createTask(title, description, degreeOfUrgency, duration, status, greenSpace)
        activate ToDoListController

            ToDoListController -> Repositories : getInstance()
            activate Repositories

                Repositories --> ToDoListController : instance
            deactivate Repositories

            ToDoListController -> RepositoriesInstance : getToDoListRepository()
            activate RepositoriesInstance

                RepositoriesInstance --> ToDoListController : toDoListRepository
            deactivate RepositoriesInstance

               ToDoListController -> ToDoEntryDTO : create(title, description, degreeOfUrgency, duration, status, greenSpace)
               activate ToDoEntryDTO

               ToDoEntryDTO --> ToDoListController : toDoEntryDto
                deactivate ToDoEntryDTO

                ToDoListController -> ToDoEntryMapper: toDomain(toDoEntryDto)
                activate ToDoEntryMapper

                ToDoEntryMapper -> ToDoEntry : create(title, description, degreeOfUrgency, duration, status, greenSpace)
                activate ToDoEntry

                ToDoEntry --> ToDoEntryMapper : toDoEntry
                deactivate ToDoEntry

                ToDoEntryMapper --> ToDoListController : toDoEntry
                deactivate ToDoEntryMapper



            ToDoListController -> ToDoListRepository : addToDoListEntry(toDoEntryDto)
            activate ToDoListRepository
            ToDoListRepository -> ToDoEntry : addEntry(toDoEntryDto)
                            activate ToDoEntry
                            ToDoEntry --> ToDoEntry : addEntry()
                            ToDoEntry --> ToDoEntry : validateEntry()

                                ToDoEntry --> ToDoListRepository : toDoEntry
                            deactivate ToDoEntry
                ToDoListRepository --> ToDoListController : toDoEntry
            deactivate ToDoListRepository

            ToDoListController --> UI : toDoEntry
        deactivate ToDoListController

        UI --> GSM : displays operation success
    deactivate UI
    deactivateÂ GSM
@enduml